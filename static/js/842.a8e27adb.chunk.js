"use strict";(self.webpackChunkbabylonjs_check=self.webpackChunkbabylonjs_check||[]).push([[842],{880:(e,n,r)=>{const t="kernelBlurVaryingDeclaration",a="varying sampleCoord{X}: vec2f;";r(4453).l.IncludesShadersStoreWGSL[t]=a},8842:(e,n,r)=>{r.r(n),r.d(n,{kernelBlurVertexShaderWGSL:()=>i});var t=r(4453);r(880);const a="kernelBlurVertex",s="vertexOutputs.sampleCoord{X}=vertexOutputs.sampleCenter+uniforms.delta*KERNEL_OFFSET{X};";t.l.IncludesShadersStoreWGSL[a]=s;const l="kernelBlurVertexShader",u="attribute position: vec2f;uniform delta: vec2f;varying sampleCenter: vec2f;\n#include<kernelBlurVaryingDeclaration>[0..varyingCount]\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {const madd: vec2f= vec2f(0.5,0.5);\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.sampleCenter=(input.position*madd+madd);\n#include<kernelBlurVertex>[0..varyingCount]\nvertexOutputs.position= vec4f(input.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}";t.l.ShadersStoreWGSL[l]=u;const i={name:l,shader:u}}}]);
//# sourceMappingURL=842.a8e27adb.chunk.js.map